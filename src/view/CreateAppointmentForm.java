/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view;

import Card.MedicalHistory;
import Card.SmartCard;
import constant.Constant;
import entities.Appointment;
import entities.User;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.query.Query;
import util.HibernateService;
import util.HibernateUtil;

import javax.swing.*;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import java.util.Objects;

import static util.Utils.getValueByRow;


/**
 * @author Robot
 */
public class CreateAppointmentForm extends javax.swing.JInternalFrame {

    private final boolean isConnect = false;
    private final SmartCard card = new SmartCard();
    private DefaultTableModel tblModel;
    private List<Appointment> appointmentList;

    public CreateAppointmentForm() {
        initComponents();
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        initTable();
        loadDataToTable();
    }

    public final void initTable() {
        tblModel = (DefaultTableModel) tblLichKham.getModel();
        String[] headerTblLichSu = new String[]{"STT", "Mã đơn khám", "Ngày khám","Tên bệnh nhân" ,"Tên bệnh", "Chi phí", "Description", "Id","PatientId"};
        tblModel.setColumnIdentifiers(headerTblLichSu);
        tblLichKham.getColumnModel().getColumn(7).setMinWidth(0);
        tblLichKham.getColumnModel().getColumn(7).setMaxWidth(0);
        tblLichKham.getColumnModel().getColumn(7).setWidth(0);
        tblLichKham.getColumnModel().getColumn(8).setMinWidth(0);
        tblLichKham.getColumnModel().getColumn(8).setMaxWidth(0);
        tblLichKham.getColumnModel().getColumn(8).setWidth(0);
    }

    public void loadDataToTable() {
        appointmentList = HibernateService.searchAppointment("");
        if (!this.appointmentList.isEmpty()) {
            int i = 1;
            tblModel.setRowCount(0);
            for (Appointment appointment : appointmentList) {
                tblModel.addRow(new Object[]{
                        i++,
                        appointment.getCode(),
                        appointment.getDate(),
                        appointment.getPatientName(),
                        appointment.getName(),
                        appointment.getCost(),
                        appointment.getDescription(),
                        appointment.getId(),
                        appointment.getPatientId()
                });
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLichKham = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        btnAdd = new javax.swing.JButton();
        btnChange = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setBorder(null);
        setPreferredSize(new java.awt.Dimension(1180, 750));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(713, 0));

        tblLichKham.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                },
                new String[]{
                        "Title 1", "Title 2", "Title 3", "Title 4"
                }
        ));
        jScrollPane1.setViewportView(tblLichKham);

        jToolBar1.setBackground(new java.awt.Color(255, 255, 255));
        jToolBar1.setBorder(javax.swing.BorderFactory.createTitledBorder("Chức năng"));
        jToolBar1.setRollover(true);

        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_add_40px.png"))); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.setFocusable(false);
        btnAdd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdd.setMargin(new java.awt.Insets(2, 20, 2, 20));
        btnAdd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAdd);

        btnChange.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnChange.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_edit_40px.png"))); // NOI18N
        btnChange.setText("Sửa");
        btnChange.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnChange.setMargin(new java.awt.Insets(2, 20, 2, 20));
        btnChange.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeActionPerformed(evt);
            }
        });
        jToolBar1.add(btnChange);

        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_delete_40px.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete.setMargin(new java.awt.Insets(2, 20, 2, 20));
        btnDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jToolBar1.add(btnDelete);

        btnRefresh.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/reload.png"))); // NOI18N
        btnRefresh.setText("Làm mới");
        btnRefresh.setFocusable(false);
        btnRefresh.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRefresh.setMargin(new java.awt.Insets(2, 20, 2, 20));
        btnRefresh.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        jToolBar1.add(btnRefresh);

        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTextField1.setBorder(javax.swing.BorderFactory.createTitledBorder("Tìm kiếm"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1040, Short.MAX_VALUE)
                                .addGap(32, 32, 32))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(98, 98, 98))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(59, 59, 59)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(18, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1110, 726));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        AddAppointment a = new AddAppointment(this, (JFrame) javax.swing.SwingUtilities.getWindowAncestor(this), rootPaneCheckingEnabled);
        a.setVisible(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeActionPerformed
        int length = tblLichKham.getSelectedRows().length;
        if(length < 1){
            JOptionPane.showMessageDialog(this,
                    "Vui lòng chọn một dòng trong bảng để xem thông tin.",
                    "Thông báo",
                    JOptionPane.WARNING_MESSAGE
            );
        }else if(length == 1) {
            Appointment selectedAppointment = this.getSelectedAppointment(this.tblLichKham.getSelectedRow());
            ChangeAppointmentInfo a = new ChangeAppointmentInfo(this, (JFrame) javax.swing.SwingUtilities.getWindowAncestor(this), rootPaneCheckingEnabled,selectedAppointment);
            a.setVisible(true);
        }else if(length > 1){
            JOptionPane.showMessageDialog(this,
                    "Vui lòng chọn một dòng trong bảng để sửa thông tin.",
                    "Thông báo",
                    JOptionPane.WARNING_MESSAGE
            );
        }

    }//GEN-LAST:event_btnChangeActionPerformed

    private Appointment getSelectedAppointment(int row){
        Appointment appointment = new Appointment();
        appointment.setCode(getValueByRow(tblLichKham, row, 1, String.class));
        appointment.setDate(getValueByRow(tblLichKham, row, 2, String.class));
        appointment.setName(getValueByRow(tblLichKham, row, 4, String.class));
        appointment.setCost(getValueByRow(tblLichKham, row, 5, Integer.class) == null ? 0 : getValueByRow(tblLichKham, row, 5, Integer.class));
        appointment.setId(getValueByRow(tblLichKham, row,7, Integer.class));
        appointment.setDescription(getValueByRow(tblLichKham, row, 6,String.class));
        appointment.setPatientId(getValueByRow(tblLichKham, row, 8,Integer.class));
        return appointment;
    }

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        handleDeleteAppointment();
    }//GEN-LAST:event_btnDeleteActionPerformed
    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        this.loadDataToTable();
    }//GEN-LAST:event_btnDeleteActionPerformed


    private void handleDeleteAppointment(){
        int length = tblLichKham.getSelectedRows().length;
        if(length < 1){
            JOptionPane.showMessageDialog(this,
                    "Vui lòng chọn một dòng trong bảng để xem thông tin.",
                    "Thông báo",
                    JOptionPane.WARNING_MESSAGE
            );
        }else if(length == 1) {
            Appointment selectedAppointment = this.getSelectedAppointment(this.tblLichKham.getSelectedRow());
            int option = JOptionPane.showConfirmDialog(this,
                    "Xóa lịch hẹn : " + selectedAppointment.getCode(),
                    "Xác nhận",
                    JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.OK_OPTION) {
                Boolean result = HibernateService.deleteAppointmentById(selectedAppointment.getId());
                if(result){
                    JOptionPane.showMessageDialog(this,
                            "Xóa thành công cho lịch khám với mã: " + selectedAppointment.getCode(),
                            "Thông báo",
                            JOptionPane.INFORMATION_MESSAGE);
                    this.loadDataToTable();
                }

            } else {
                JOptionPane.showMessageDialog(
                        null,
                        "Hủy xóa lịch khám.",
                        "Hủy tiến trình",
                        JOptionPane.WARNING_MESSAGE
                );
            }

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnChange;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable tblLichKham;
    // End of variables declaration//GEN-END:variables


}
